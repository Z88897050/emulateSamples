##################config zookeeper##################

#zookeeper相关属性配置(可选)
#zookeeper.sasl.client=
#zookeeper.sasl.clientconfig=
#zk_session_timeout=30000
#zk_connection_timeout=30000

##################config topic##################

#topic不存在自动创建时将使用以下的配置覆盖集群中的配置(可选)
#replication-factor=2
#partitions=2
#topic的config配置，前面添加标识符"config-"
#config-retention.ms=86400000


#操作类型可用性测试(connect),性能测试(performance),删除topic(clear)
#建议server.properties中delete.topic.enable修改为true，否则执行clear后，topic并没有实际删除
operation=clear
#测试主题，如果不存在则会自动创建，建议使用不存在或者新的主题，测试会产生无效数据
topic=test1
zookeeper=node11,node12,node14/kafka


##################connection template##################

#安全协议PLAINTEXT，SSL，SASL_PLAINTEXT，SASL_SSL
#测试可用性的时候，下面两项需要配置，如果有安全要求，则配置相应的选项
#security.protocol=PLAINTEXT
#bootstrap.servers=10.68.23.11:9092

######SSL######
#ssl.truststore.location=/resources/kafka.client.truststore.jks
#ssl.truststore.password=unimas
#ssl.keystore.location=/resources/kafka.client.keystore.jks
#ssl.keystore.password=unimas
#ssl.key.password=unimas

######SASL_PLAINTEXT######
#java.security.krb5.conf=/resources/krb5.conf
#java.security.auth.login.config=/resources/kafka_client_jaas.conf
#sasl.kerberos.service.name=kafka

######SASL_SSL######
#Configure both of the above


##################performance template##################

#性能测试，测试类型producer,consumer
#type=producer

######producer######
#测试总数据量
#num-records=1000000
#每条记录的大小(B)
#record-size=1024
#吞吐量调节messages/sec或bytes/sec
#throughput=90000
#消费者属性配置，前面额外添加标识符"props-"
#bootstrap.servers必须配置
#props-bootstrap.servers=10.68.23.11:9092,node14:9092
#props-acks=0
#props-batch.size=1000
#props-buffer.memory=1048576

######consumer######
#后续添加